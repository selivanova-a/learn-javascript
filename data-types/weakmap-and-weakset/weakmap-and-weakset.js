//--------------------------------------------------WeakMap and WeakSet-------------------------------------------------

//WeakMap
//ключи в WeakMap должны быть объектами, а не примитивными значениями
// Теперь, если мы используем объект в качестве ключа и если больше нет ссылок на этот объект,
// то он будет удалён из памяти (и из объекта WeakMap) автоматически.




// WeakSet
//   Она аналогична Set, но мы можем добавлять в WeakSet только объекты (не примитивные значения).
// Объект присутствует в множестве только до тех пор, пока доступен где-то ещё.
//   Как и Set, она поддерживает add, has и delete, но не size, keys() и не является перебираемой.

/*
Обе этих структуры данных не поддерживают методы и свойства,
 работающие со всем содержимым сразу или возвращающие информацию о размере коллекции.
  Возможны только операции на отдельном элементе коллекции.*/



//--------------------------------------------------Задачи------------------------------------------------------------
//Хранение отметок "не прочитано" 1
// Использовать WeakSet:
let messages = [
  {text: "Hello", from: "John"},
  {text: "How goes?", from: "John"},
  {text: "See you soon", from: "Alice"}
];

let readMes = new WeakSet()
readMes.add(messages[0])


// Хранение времени прочтения 2
// Использовать WeakMap:

let messages2 = [
  { text: "Hello", from: "John" },
  { text: "How goes?", from: "John" },
  { text: "See you soon", from: "Alice" }
];

let dataMes = new WeakMap()
dataMes.set(messages2[0], new Date())

